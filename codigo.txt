<div class="card border-0 shadow mb-2">
    <div class="card-header">Soporte de pago</div>
    <div class="card-body">
        @if($verificacion != null && $verificacion->uv_pay_status == 0)
            <div class="alert alert-primary"><i class="bi bi-info-circle"></i> Su soporte de pagó ha
                sido
                enviado, validaremos la información
                correspondiente y daremos respuesta para continuar con el proceso de verificación.</div>
        @elseif($verificacion != null && $verificacion->uv_pay_status == 1)
            <div class="alert alert-success"><i class="bi bi-info-circle"></i> Su pago ha sido validado,
                estás a un pasó de lograrlo.</div>
        @else
            <form action="{{ URL::to('/settings-post-verify-pay') }}" method="post"
                enctype="multipart/form-data">
                @csrf
                <div class="row mt-2">
                    <div class="col-md-4">
                        <label class="col-form-label-sm">Cargar soporte de pago en formato .PDF</label>
                    </div>
                    <div class="col-md-6">
                        <input class="form-custom" type="file" name="documento_ID" id="documento_ID"
                            accept="application/pdf" required>
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-primary" type="submit">Cargar</button>
                    </div>
                </div>
            </form>
        @endif
    </div>
</div>

var staticCacheName = "pwa-v" + new Date().getTime();
var filesToCache = [
'/offline',
'/css/app.css',
'/js/app.js',
'/images/icons/icon-72x72.png',
'/images/icons/icon-96x96.png',
'/images/icons/icon-128x128.png',
'/images/icons/icon-144x144.png',
'/images/icons/icon-152x152.png',
'/images/icons/icon-192x192.png',
'/images/icons/icon-384x384.png',
'/images/icons/icon-512x512.png',
];
self.addEventListener("install", event => {
event.waitUntil(
caches.open(staticCacheName)
.then(cache => {
return cache.addAll(filesToCache);
})
.catch(error => {
console.error('Error al cachear recursos:', error);
})
);
});

self.addEventListener("activate", event => {
event.waitUntil(
caches.keys().then(cacheNames => {
return Promise.all(
cacheNames.filter(cacheName => {
return cacheName !== staticCacheName;
}).map(cacheName => {
return caches.delete(cacheName);
})
);
})
);
});

self.addEventListener('fetch', event => {
event.respondWith(
caches.match(event.request).then(response => {
if (response) {
return response; // Devuelve el recurso almacenado en caché
}

// Si no está en caché, realiza la solicitud a la red
return fetch(event.request)
.then(networkResponse => {
// Clona la respuesta antes de consumirla
const clonedNetworkResponse = networkResponse.clone();

// Almacena la respuesta en caché para futuras solicitudes
/*caches.open(staticCacheName).then(cache => {
cache.put(event.request, clonedNetworkResponse);
});*/

return networkResponse;
})
.catch(() => {
// Si la solicitud a la red falla (sin conexión), intenta recuperar desde la caché
return caches.match(event.request);
});
})
);
});

<!--Dropdowm mentions-->
        <div class="content-mentions">
            <div class="form-group">
                <form action="" method="post">
                    @csrf
                    <div class="d-flex gap-1">
                        <input type="text" id="mention" class="form-control mention-input" data-post-id="{{ $post->pu_id }}"
                            placeholder="Escribe @seguido" required>
                        <button class="btn btn-primary btn-mentions" data-post="{{$post->pu_id}}"><i class="bi bi-at"></i></button>
                    </div>
                </form>
                <div class="dropdown mention-dropdown" id="mentionDropdown" class="dropdown" data-post-id="{{ $post->pu_id }}">
                    <ul class="dropdown-menu border-0 shadow" data-post-id="{{ $post->pu_id }}" id="menu-mentions" role="menu">
                    </ul>
                </div>
            </div>
        </div>